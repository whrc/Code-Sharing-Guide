[
["index.html", "Code Sharing Guide 1 Open Science Recap But how do we practice open science?", " Code Sharing Guide Charlotte Rivard and Nolan Kitts 1 Open Science Recap From Nolan’s March 27 SOB Open Data The idea that some data should be freely available to everyone to use and republish as they wish, without restrictions from copyright, patents or other mechanisms of control. Open Source Open-source software is a type of computer software in which source code is released under a license in which the copyright holder grants users the rights to study, change, and distribute the software to anyone and for any purpose. Open-source software may be developed in a collaborative public manner. Open Methodology Open methodology is conducted in the spirit of free and open-source software. Much like open-source schemes that are built around a source code that is made public, the central theme of open research is to make clear accounts of the methodology freely available via the internet, along with any data or results extracted or derived from them. This permits a massively distributed collaboration, and one in which anyone may participate at any level of the project. But how do we practice open science? Two commonly used tools that we will cover today are: … for storing and sharing code and datasets, easy collaboration, and version control and … for writing books, reports, and software documentation using Disclaimer: We are by no means experts on the tools we’re covering. We will be your guides and we can learn together. Let’s get started! "],
["github-tutorial.html", "2 Github Tutorial 2.1 Getting Started 2.2 Github Jargon 2.3 Using GitHub 2.4 GitHub Desktop", " 2 Github Tutorial GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. 2.1 Getting Started Create a GitHub account Download Git 2.2 Github Jargon With a language all its own, this quick guide to common terms of GitHub and Git will have you collaborating in no time. 2.2.1 Repository A repository is the most basic element of Git and GitHub. Imagine it as a project’s folder. A repository contains all of the project files (including documentation), and stores each file’s revision history. 2.2.2 Commit An individual change to a file (or set of files). With Git, every time you save it creates a unique ID (a.k.a. the “SHA” or “hash”) that allows you to keep record of what changes were made when and by who. Commits usually contain a commit message which is a brief description the changes made. 2.2.3 Branch A parallel version of repository. It is contained within the repository, but does not affect the primary or master branch allowing you to work freely without disrupting the “live” version. 2.2.4 Remote The connection of a local repository with one on GitHub. It permits revision history to be synchronized by publishing local commits and downloading any new changes from GitHub. 2.2.5 Pull Request A feature on GitHub which provides conversation, line-by-line code review, change history analysis, and summaries of modified files. 2.3 Using GitHub 2.3.1 Step 1. Create a Repository A repository is usually used to organize a single project. Repositories can contain folders and files, images, videos, spreadsheets, and data sets – anything your project needs. We recommend including a README, or a file with information about your project. GitHub makes it easy to add one at the same time you create your new repository. It also offers other common options such as a license file. Your hello-world repository can be a place where you store ideas, resources, or even share and discuss things with others. 2.3.1.1 To create a new repository In the upper right corner, next to your avatar or identicon, click and then select New repository. Name your repository hello-world. Write a short description. Select Initialize this repository with a README. This quick tutorial will show you how to upload your first project to GitHub 2.4 GitHub Desktop GitHub Desktop is an open source GitHub app. Everything we just covered can be done in GitHub Desktop. GitHub Desktop screenshot - Windows 2.4.1 Where can I get it? Download the official installer for your operating system: macOS Windows "],
["bookdown.html", "3 Bookdown 3.1 What is Bookdown? 3.2 Example Books 3.3 Build Your Own Book", " 3 Bookdown 3.1 What is Bookdown? Bookdown is a useful R package for making digital books in HTML, PDF or E-book format. It is what we used to create this Code-Sharing-Guide! While you can use it make any type of book you like, it is especially useful for code documentation, since it allows you to seamlessly integrate code into your book. HTML books can become easy yet elegant websites to share your code with the world! The creators of bookdown created a very thorough guide of the tool, showing how many possibilities there are! Bookdown Documentation Guide 3.2 Example Books The following are examples of how other scientists harnessed the power of Bookdown to create LandTrendr This is a guide by Oregon State explaining LandTrendr, an change detection method they designed that can be used in earth engine. Notice that while the book is built within RStudio, their code is in python. Though only R code can be run within your book (showing the outputs), bookdown can still be used to document code of other languages. LandTrendr Guide Soil Mapping Soil Mapping Documentation 3.3 Build Your Own Book 3.3.1 Demo Book Start out by downloading R Code https://yihui.org/knitr/options/#code-chunk "]
]
