[
["index.html", "Code Sharing Guide 1 Open Science Recap Open Science in Practice", " Code Sharing Guide Charlotte Rivard (crivard@whrc.org) and Nolan Kitts (nkitts@whrc.org) 1 Open Science Recap From Nolan’s March 27 SOB Open Data The idea that some data should be freely available to everyone to use and republish as they wish, without restrictions from copyright, patents or other mechanisms of control. Open Source Open-source software is a type of computer software in which source code is released under a license in which the copyright holder grants users the rights to study, change, and distribute the software to anyone and for any purpose. Open-source software may be developed in a collaborative public manner. Open Methodology Open methodology is conducted in the spirit of free and open-source software. Much like open-source schemes that are built around a source code that is made public, the central theme of open research is to make clear accounts of the methodology freely available via the internet, along with any data or results extracted or derived from them. This permits a massively distributed collaboration, and one in which anyone may participate at any level of the project. Open Science in Practice Two commonly used tools that we will cover today are: … for storing and sharing code and datasets, easy collaboration, and version control and … for writing books, reports, and software documentation using Disclaimer: We are by no means experts on the tools we’re covering. We will be your guides and we can learn together. Let’s get started! "],
["github-tutorial.html", "2 Github Tutorial Getting Started Github Jargon Using GitHub 1", " 2 Github Tutorial GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. Getting Started Create a GitHub account Download GitHub Desktop Github Jargon With a language all its own, this quick guide to common terms of GitHub and Git will have you collaborating in no time. Repository A repository is the most basic element of Git and GitHub. Imagine it as a project’s folder. A repository contains all of the project files (including documentation), and stores each file’s revision history. Commit An individual change to a file (or set of files). With Git, every time you save it creates a unique ID (a.k.a. the “SHA” or “hash”) that allows you to keep record of what changes were made when and by whom. Commits usually contain a commit message which is a brief description the changes made. Branch A parallel version of repository. It is contained within the repository, but does not affect the primary or master branch allowing you to work freely without disrupting the “live” version. Remote The connection of a local repository with one on GitHub. It permits revision history to be synchronized by publishing local commits and downloading any new changes from GitHub. Pull Request A feature on GitHub which provides conversation, line-by-line code review, change history analysis, and summaries of modified files. Using GitHub 1 Step 1. Create a Repository A repository is usually used to organize a single project. Repositories can contain folders and files, images, videos, spreadsheets, and data sets – anything your project needs. We recommend including a README, or a file with information about your project. GitHub makes it easy to add one at the same time you create your new repository. It also offers other common options such as a license file. Your hello-world repository can be a place where you store ideas, resources, or even share and discuss things with others. To create a new repository In the upper right corner, next to your avatar or identicon, click “+” and then select New repository. Name your repository hello-world. Write a short description. Select Initialize this repository with a README. Step 2. Clone Repository When you create a repository on GitHub, it exists as a remote repository. You can clone your repository to create a local copy on your computer and sync between the two locations. To clone a repository On GitHub, navigate to the main page of the repository. Under your repository name, click Clone or download. Click Open in Desktop to clone the repository and open it in GitHub Desktop. Click Choose… and, using Windows Explorer, navigate to a local path where you want to clone the repository. Click Clone. Step 3. Commit a change in your project As you make changes to files in your project and save them locally, you will also see the changes in GitHub Desktop. The red icon indicates removed files. The yellow icon indicates modified files. The green icon indicates added files. Select the changes that you want reflected on your GitHub repository (usually all changes are commited). At the bottom of the list of changes, in the Summary field, type a short, meaningful commit message. Under the Description field, click Commit to master. Click Push origin to push your changes to the remote. That’s it! Your changes are now up on GitHub. Adapted from tutorials on https://guides.github.com and https://help.github.com↩ "],
["bookdown.html", "3 Bookdown 3.1 What is Bookdown? 3.2 Example Books 3.3 Getting Started 3.4 Publishing to the Web", " 3 Bookdown 3.1 What is Bookdown? Bookdown is a useful R package for making digital books in HTML, PDF or E-book format. It is what we used to create this Code-Sharing-Guide! While you can use it make any type of book you like, it is especially useful for code documentation since it allows you to seamlessly integrate code into your book. HTML books can become easy yet elegant websites to share your code with the world. The creators of bookdown made a very thorough guide of the tool, showing how many possibilities there are: Bookdown Documentation Guide 3.2 Example Books The following are examples of how other scientists harnessed the power of Bookdown to document their research projects. LandTrendr This is a guide by Oregon State explaining LandTrendr, a change detection method they designed that can be used in earth engine. Notice that while the book is built within RStudio, their code is in python. Though only R code can be run within your book (showing the outputs), bookdown can still be used to document code of other languages. LandTrendr Guide Soil Mapping This documentation by Leo Ramirez on soil mapping, is an example of how R-code can be intergrated into your book. Soil Mapping Documentation This is an example of a textbook written with bookdown. It explains Soil Mapping and is written by Tom Hengel. Soil Mapper Textbook MIR Soil Predictions At the center, we are currently working on a site to document our process of predicting soil properties using Mid-Infrared Spectroscopy. MIR Soil Predictions 3.3 Getting Started (Adapted from Bookdown Documentation: Getting Started) Download an Example The best way to get started is to download an example book and experiment with making changes. As stated earlier, this guide itself is a bookdown book and it’s source files can be downloaded from the WHRC Github account: Code-Sharing-Guide Github Repository Bookdown has also provided a few template books: Bookdown Minimal, contains the basic skeleton of a bookdown book while, Bookdown Demo has more features, such as cross references and R-code. Install RStudio Download the latest version if your RStudio version is lower than 1.0.0 Download RStudio Install Bookdown # stable version on CRAN install.packages(&#39;bookdown&#39;) # or development version on GitHub # devtools::install_github(&#39;rstudio/bookdown&#39;) Build the Book 1- Open up the R-Project within the book’s folder Within the folder you will see several R-Markdown files, indicated by the extension .Rmd The index file has information about the book as a whole and how it will be produced. It can also contain the Introduction to the book. Other .Rmd files will be labeled starting with 01, 02, etc, in the order you would like them added to the book. If you open an R-Markdown file, it should have one or more headers… # for major tabs/chapters/sections of the book ## for subtabs … and so on. 2- Build the book using the ‘Build’ Tab, usually in the upper right hand corner When the book it built, it will “knit” these R-Markdown files into the desired output format (HTML, PDF or E-Book). The book should pop-up on your screen once it is loaded. R Code For help with the syntax within the rmarkdown files, see the documentation for knitr and rmarkdown: knitr documentation rmarkdown cheatsheet {r} Declares an R-Code Chunk # Creates a new tab/section/chapter ## Creates a new subtab/section/chapter **Word** 2 or more stars around a word makes it bold [title](link address) for linking websites ![title](image file path) for inserting an image Add 4 or more spaces to get a new line 3.4 Publishing to the Web Bookdown books can be hosted by either Github or Bookdown.com Detailed instructions for how to publish your book to Github (as we did with this book) can be found here: Publish to Github For a quick way to publish to Github, use the repository for this guide as a template… 1- Create a repository from this template Create New Repository from Code-Sharing-Guide 2- Go to Settings To see the website made your repository, go to Settings in the top right corner of your repository page 3- Update Github Pages Setting Scroll down to Github Pages and change Source: ‘None’, to ‘master branch /docs folder’. For this particular example, the index.html file, used to build the website is located in the docs folder. The .nojekyll file located in the docs folder, suppresses Github Pages from creating the website with Jekyll, and allows the bookdown file to load appropriately. The link to your website will appear- something like… https://user-name.github.io/repo-name/ If it does not work, try adding `index.html to the end… https://user-name.github.io/repo-name/index.html or delete the README file of the repo (for some reason this can interfere) 4- Edit the site to make your own book You can then edit the site for your project by cloning/downloading the repository to your computer, making changes and pushing those back to Github. If you are happy with the formatting of this document, all that will have to change is the .Rmd files in the folder. It is important to note that the book must be built again after changes for your .Rmd files are made, to see those changes on the website. "]
]
